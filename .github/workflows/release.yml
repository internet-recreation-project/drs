name: Build and Release DRS

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up GCC (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: egor-tensin/setup-gcc@v1
      with:
        version: latest
        platform: x64

    - name: Build DRS (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        gcc -o drs drs.c -lpthread
        tar -czvf drs-linux-x86_64.tar.gz drs

    - name: Build DRS (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # Build for Intel Macs (x86_64)
        clang -o drs-x86_64 drs.c -lpthread -target x86_64-apple-macos10.12
        # Build for Apple Silicon Macs (arm64)
        clang -o drs-arm64 drs.c -lpthread -target arm64-apple-macos11
        # Create a universal binary
        lipo -create -output drs drs-x86_64 drs-arm64
        # Package the universal binary
        tar -czvf drs-macos-universal.tar.gz drs

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          drs-linux-x86_64.tar.gz
          drs-macos-universal.tar.gz
